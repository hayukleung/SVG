package com.github.megatronking.svg.sample.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class christmas_hat extends SVGRenderer {

    public christmas_hat(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(48.0f);
        mHeight = dip2px(48.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        final float scaleX = w / 1024.0f;
        final float scaleY = h / 1024.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(510.7f, 511.6f);
        mPath.rMoveTo(-448.1f, 0.0f);
        mPath.cubicTo(62.300026f, 606.4084f, 92.09678f, 698.9094f, 147.67831f, 775.71704f);
        mPath.cubicTo(203.25984f, 852.52466f, 281.80914f, 909.7461f, 371.95917f, 939.1007f);
        mPath.cubicTo(462.10916f, 968.4553f, 559.2909f, 968.4553f, 649.4409f, 939.1007f);
        mPath.cubicTo(739.59094f, 909.7461f, 818.1402f, 852.52466f, 873.72174f, 775.71704f);
        mPath.cubicTo(929.3033f, 698.9094f, 959.10004f, 606.4084f, 958.80005f, 511.6f);
        mPath.cubicTo(958.80005f, 392.80206f, 911.55743f, 278.7483f, 827.55457f, 194.74545f);
        mPath.cubicTo(743.55176f, 110.74263f, 629.498f, 63.5f, 510.70004f, 63.5f);
        mPath.cubicTo(391.9021f, 63.5f, 277.84833f, 110.74263f, 193.84549f, 194.74545f);
        mPath.cubicTo(109.84267f, 278.7483f, 62.600037f, 392.80206f, 62.600037f, 511.6f);
        mPath.close();
        mPath.moveTo(62.600006f, 511.6f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-5579558, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(780.2f, 719.9f);
        mPath.rCubicTo(0.0f, 32.4f, -131.2f, 58.6f, -293.1f, 58.6f);
        mPath.rCubicTo(-161.9f, 0.0f, -293.1f, -26.2f, -293.1f, -58.6f);
        mPath.rCubicTo(0.0f, -32.4f, 131.2f, -58.6f, 293.1f, -58.6f);
        mPath.rCubicTo(161.9f, 0.0f, 293.1f, 26.3f, 293.1f, 58.6f);
        mPath.close();
        mPath.moveTo(780.2f, 719.9f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-10987173, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(818.5f, 645.3f);
        mPath.rCubicTo(0.0f, 16.2f, -39.8f, 29.3f, -88.9f, 29.3f);
        mPath.rCubicTo(-49.1f, 0.0f, -88.9f, -13.1f, -88.9f, -29.3f);
        mPath.rCubicTo(0.0f, -16.2f, 39.8f, -29.3f, 88.9f, -29.3f);
        mPath.rCubicTo(49.1f, 0.0f, 88.9f, 13.1f, 88.9f, 29.3f);
        mPath.close();
        mPath.moveTo(818.5f, 645.3f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-10987173, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(723.0f, 701.6f);
        mPath.rCubicTo(0.0f, 37.7f, -105.2f, 47.3f, -235.0f, 47.3f);
        mPath.rCubicTo(-129.79999f, 0.0f, -235.0f, -11.0f, -235.0f, -47.3f);
        mPath.rCubicTo(0.0f, -78.4f, -34.5f, -147.0f, 235.0f, -147.0f);
        mPath.rCubicTo(269.5f, 0.0f, 235.0f, 54.1f, 235.0f, 147.0f);
        mPath.close();
        mPath.moveTo(723.0f, 701.6f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-789259, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(683.7f, 596.0f);
        mPath.rCubicTo(6.0f, 14.5f, -86.3f, 28.3f, -192.7f, 28.3f);
        mPath.rCubicTo(-106.400024f, 0.0f, -195.7f, -13.0f, -192.7f, -28.3f);
        mPath.cubicTo(389.9f, 129.2f, 700.4f, 252.2f, 717.0f, 289.5f);
        mPath.rCubicTo(16.9f, 37.9f, -157.8f, 4.6f, -33.3f, 306.5f);
        mPath.close();
        mPath.moveTo(683.7f, 596.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-750708, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(692.5f, 286.4f);
        mPath.rCubicTo(-1.1f, -2.5f, -3.7f, -5.5f, -7.4f, -8.6f);
        mPath.rCubicTo(-28.2f, 28.1f, -193.8f, -4.8f, -166.8f, 326.4f);
        mPath.rCubicTo(57.8f, 2.8f, 145.4f, -6.1f, 141.0f, -17.6f);
        mPath.rCubicTo(-110.9f, -288.0f, 50.1f, -262.3f, 33.2f, -300.2f);
        mPath.close();
        mPath.moveTo(692.5f, 286.4f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-750708, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(830.0f, 340.9f);
        mPath.rCubicTo(0.0f, 38.7f, -31.4f, 70.0f, -70.0f, 70.0f);
        mPath.rCubicTo(-38.7f, 0.0f, -70.0f, -31.3f, -70.0f, -70.0f);
        mPath.rCubicTo(0.0f, -38.700012f, 31.3f, -70.0f, 70.0f, -70.0f);
        mPath.rCubicTo(38.6f, 0.0f, 70.0f, 31.3f, 70.0f, 70.0f);
        mPath.close();
        mPath.moveTo(830.0f, 340.9f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-789259, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}